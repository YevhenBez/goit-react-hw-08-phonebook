{"version":3,"file":"static/js/650.edb987ed.chunk.js","mappings":"4MACA,EAA4B,+BAA5B,EAAwE,gCAAxE,EAAoH,+BAApH,EAA4J,4B,uCC0F5J,EArFoB,WAClB,OAAwBA,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA4BF,EAAAA,EAAAA,UAAS,IAArC,eAAOG,EAAP,KAAeC,EAAf,KAEMC,GAAWC,EAAAA,EAAAA,IAAYC,EAAAA,IAC7BC,QAAQC,IAAIJ,GACZ,IAAMK,GAAWC,EAAAA,EAAAA,OAEjBC,EAAAA,EAAAA,YAAU,WACRF,GAASG,EAAAA,EAAAA,MACV,GAAE,CAACH,IAEJ,IAeMI,EAAe,SAAAC,GACnB,MAAwBA,EAAMC,cAAtBf,EAAR,EAAQA,KAAMgB,EAAd,EAAcA,MAEdT,QAAQC,IAAIR,GACZO,QAAQC,IAAIQ,GACZT,QAAQC,IAAa,WAATR,GAEC,WAATA,EACFG,EAAUa,GAEVf,EAAQe,EAEX,EAWD,OACE,kBAAMC,UAAWC,EAAeC,SAVb,SAAAL,GACnBA,EAAMM,iBA9BW,SAACpB,EAAME,GACxB,GACEE,EAASiB,MACP,SAAAC,GAAO,OAAIA,EAAQtB,KAAKuB,gBAAkBvB,EAAKuB,aAAxC,IAGTC,MAAM,GAAD,OAAIxB,EAAJ,kCACA,GAAII,EAASiB,MAAK,SAAAC,GAAO,OAAIA,EAAQpB,SAAWA,CAAvB,IAC9BsB,MAAM,GAAD,OAAItB,EAAJ,iCACA,CACL,IAAMoB,EAAU,CAAEtB,KAAAA,EAAME,OAAAA,GACxBO,GAASgB,EAAAA,EAAAA,IAAYH,GACtB,CACF,CAmBCI,CAAW1B,EAAME,GAEjBD,EAAQ,IACRE,EAAU,GACX,EAGC,WACE,mBAAOc,UAAWC,EAAlB,UAAkC,QAEhC,kBACED,UAAWC,EACXS,KAAK,OACL3B,KAAK,OACLgB,MAAOhB,EACP4B,QAAQ,yHACRC,MAAM,yIACNC,UAAQ,EACRC,SAAUlB,QAGd,mBAAOI,UAAWC,EAAlB,UAAkC,UAEhC,kBACED,UAAWC,EACXS,KAAK,MACL3B,KAAK,SACLgB,MAAOd,EACP0B,QAAQ,yFACRC,MAAM,+FACNC,UAAQ,EACRC,SAAUlB,QAGd,mBAAQc,KAAK,SAASV,UAAWC,EAAjC,SAA6C,kBAKlD,ECxFD,EAAgC,0CAAhC,EAAsF,sCCiCtF,MA7BA,YAAmD,IAArBc,EAAoB,EAApBA,GAAIhC,EAAgB,EAAhBA,KAAME,EAAU,EAAVA,OAChCO,GAAWC,EAAAA,EAAAA,MAMjB,OACE,gBAAIO,UAAWC,EAAf,WACE,yBACGlB,EAAK,KAAGE,MAEX,mBACEe,UAAWC,EACXS,KAAK,SACLM,QAAS,kBAZOC,EAYaF,OAXjCvB,GAAS0B,EAAAA,EAAAA,IAAeD,IADJ,IAAAA,CAYP,EAHX,SAIC,aAKN,ECKD,EA3BoB,WAClB,IAAM9B,GAAWC,EAAAA,EAAAA,IAAYC,EAAAA,IACvB8B,GAAS/B,EAAAA,EAAAA,IAAYgC,EAAAA,IASrBC,EAPqB,WACzB,IAAMC,EAAmBH,EAAOI,OAAOjB,cACvC,OAAOnB,EAASgC,QAAO,SAAAd,GAAO,OAC5BA,EAAQtB,KAAKuB,cAAckB,SAASF,EADR,GAG/B,CAEuBG,GAExB,OACE,wBACGJ,EAAgBK,KAAI,SAAArB,GAAO,OAC1B,SAAC,EAAD,CAEEU,GAAIV,EAAQU,GACZhC,KAAMsB,EAAQtB,KACdE,OAAQoB,EAAQpB,QAHXoB,EAAQU,GAFW,KAUjC,EC5BD,EAAkC,gC,UC0BlC,MAtBA,WACE,IAAMI,GAAS/B,EAAAA,EAAAA,IAAYgC,EAAAA,IAC3B9B,QAAQC,IAAR,gDAAuB4B,EAAOI,SAC9B,IAAM/B,GAAWC,EAAAA,EAAAA,MAMjB,OACE,6BAAO,yBAEL,kBACEO,UAAWC,EACXS,KAAK,OACLX,MAAOoB,EAAOI,OACdT,SAXe,SAAAjB,GACnBL,GAASmC,EAAAA,EAAAA,GAAU9B,EAAMC,cAAcC,OACxC,MAaF,E,UCfD,EARe,WACb,OACE,0BACE,SAAC,KAAD,CAAc6B,MAAM,MAAMC,MAAM,aAGrC,EC6BD,EA7BiB,WACf,IAAMC,GAAe1C,EAAAA,EAAAA,IAAY2C,EAAAA,IAIjC,OAFAzC,QAAQC,IAAR,qEAAkCuC,KAGhC,gBACEE,MAAO,CACLC,OAAQ,QACRC,QAAS,OACTC,eAAgB,SAChBC,WAAY,SACZC,SAAU,GACVR,MAAO,WAPX,UAWE,4BACE,wBAAI,eACJ,SAAC,EAAD,KACA,wBAAI,cACJ,SAAC,EAAD,IACCC,IAAgB,SAAC,EAAD,KACjB,SAAC,EAAD,QAIP,C,gICnCM,IAAMzC,EAAiB,SAAAiD,GAAK,OAAIA,EAAMnD,SAASoD,oBAAnB,EAEtBnB,EAAe,SAAAkB,GAAK,OAAIA,EAAMnB,MAAV,EAEpBY,EAAkB,SAAAO,GAAK,OAAIA,EAAMnD,SAASqD,SAAnB,EAGvBC,EAAmB,SAAAH,GAAK,OAAIA,EAAMnD,SAASqD,SAAnB,C","sources":["webpack://react-homework-template/./src/components/contactForm/css/contactForm.module.css?db24","components/contactForm/ContactForm.js","webpack://react-homework-template/./src/components/contactListElement/css/contactListElement.module.css?a5d3","components/contactListElement/ContactListElement.js","components/contactList/ContactList.js","webpack://react-homework-template/./src/components/Filter/css/filter.module.css?036f","components/Filter/Filter.js","components/loader/Loader.js","pages/contacts/Contacts.js","redux/selectors.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"formStyle\":\"contactForm_formStyle__25FxS\",\"labelStyle\":\"contactForm_labelStyle__d91mR\",\"inputName\":\"contactForm_inputName__V4j7i\",\"btnAdd\":\"contactForm_btnAdd__QfIt-\"};","import React, { useState, useEffect } from 'react';\nimport css from './css/contactForm.module.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContacts, fetchContacts } from '../../redux/operations';\nimport { selectContacts } from '../../redux/selectors';\n\nconst ContactForm = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const contacts = useSelector(selectContacts);\n  console.log(contacts);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const addContact = (name, number) => {\n    if (\n      contacts.find(\n        contact => contact.name.toLowerCase() === name.toLowerCase()\n      )\n    ) {\n      alert(`${name} is already in contacts.`);\n    } else if (contacts.find(contact => contact.number === number)) {\n      alert(`${number} is already in contacts.`);\n    } else {\n      const contact = { name, number };\n      dispatch(addContacts(contact));\n    }\n  };\n\n  const handleChange = event => {\n    const { name, value } = event.currentTarget;\n\n    console.log(name);\n    console.log(value);\n    console.log(name === 'number');\n\n    if (name === 'number') {\n      setNumber(value);\n    } else {\n      setName(value);\n    }\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    addContact(name, number);\n\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <form className={css.formStyle} onSubmit={handleSubmit}>\n      <label className={css.labelStyle}>\n        Name\n        <input\n          className={css.inputName}\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          onChange={handleChange}\n        />\n      </label>\n      <label className={css.labelStyle}>\n        Number\n        <input\n          className={css.inputName}\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          onChange={handleChange}\n        />\n      </label>\n      <button type=\"submit\" className={css.btnAdd}>\n        Add contact\n      </button>\n    </form>\n  );\n};\n\nexport default ContactForm;","// extracted by mini-css-extract-plugin\nexport default {\"liContactList\":\"contactListElement_liContactList__hYj29\",\"btnDelete\":\"contactListElement_btnDelete__m-KIO\"};","import PropTypes from 'prop-types';\nimport css from './css/contactListElement.module.css';\nimport { useDispatch } from 'react-redux';\nimport { deleteContacts } from '../../redux/operations';\n\nfunction ContactListElement({ id, name, number }) {\n  const dispatch = useDispatch();\n\n  const deleteContact = contactId => {\n    dispatch(deleteContacts(contactId));\n  };\n\n  return (\n    <li className={css.liContactList}>\n      <p>\n        {name}: {number}\n      </p>\n      <button\n        className={css.btnDelete}\n        type=\"button\"\n        onClick={() => deleteContact(id)}\n      >\n        Delete\n      </button>\n    </li>\n  );\n}\n\nContactListElement.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n};\n\nexport default ContactListElement;","import ContactListElement from '../contactListElement/ContactListElement';\nimport { useSelector } from 'react-redux';\nimport { selectContacts, selectFilter } from '../../redux/selectors';\n\nconst ContactList = () => {\n  const contacts = useSelector(selectContacts);\n  const filter = useSelector(selectFilter);\n\n  const getVisibleContacts = () => {\n    const normalizedFilter = filter.search.toLowerCase();\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter)\n    );\n  };\n\n  const visibleContacts = getVisibleContacts();\n\n  return (\n    <ul>\n      {visibleContacts.map(contact => (\n        <ContactListElement\n          key={contact.id}\n          id={contact.id}\n          name={contact.name}\n          number={contact.number}\n        />\n      ))}\n    </ul>\n  );\n};\n\nexport default ContactList;","// extracted by mini-css-extract-plugin\nexport default {\"inputFilterName\":\"filter_inputFilterName__Ti7K6\"};","import css from './css/filter.module.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectFilter } from '../../redux/selectors';\nimport { setFilter } from '../../redux/filterSlice';\n\nfunction Filter() {\n  const filter = useSelector(selectFilter);\n  console.log(`фильтр  ${filter.search}`);\n  const dispatch = useDispatch();\n\n  const changeFilter = event => {\n    dispatch(setFilter(event.currentTarget.value));\n  };\n\n  return (\n    <label>\n      Find contacts by name\n      <input\n        className={css.inputFilterName}\n        type=\"text\"\n        value={filter.search}\n        onChange={changeFilter}\n      />\n    </label>\n  );\n}\n\nexport default Filter;","import { InfinitySpin } from 'react-loader-spinner';\n\nconst Loader = () => {\n  return (\n    <div>\n      <InfinitySpin width=\"200\" color=\"#4fa94d\" />\n    </div>\n  );\n};\n\nexport default Loader;\n","import ContactForm from '../../components/contactForm/ContactForm';\nimport ContactList from '../../components/contactList/ContactList';\nimport Filter from '../../components/Filter/Filter';\nimport Loader from '../../components/loader/Loader';\nimport { useSelector } from 'react-redux';\nimport { selectIsLoading } from '../../redux/selectors';\n\n\nconst Contacts = () => {\n  const isLoadingApp = useSelector(selectIsLoading);\n\n  console.log(`Проверка isLoading ${isLoadingApp}`);\n\n  return (\n    <div\n      style={{\n        height: '100vh',\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        fontSize: 40,\n        color: '#010101',\n      }}\n    >\n      {/* React homework template */}\n      <div>\n        <h1>Phonebook</h1>\n        <ContactForm />\n        <h2>Contacts</h2>\n        <Filter />\n        {isLoadingApp && <Loader />}\n        <ContactList />\n      </div>\n    </div>\n  );\n};\n\nexport default Contacts;","export const selectContacts = state => state.contacts.arrayInitialContacts;\n\nexport const selectFilter = state => state.filter;\n\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\n\nexport const selectIsLoggedIn = state => state.contacts.isLoading;;\n"],"names":["useState","name","setName","number","setNumber","contacts","useSelector","selectContacts","console","log","dispatch","useDispatch","useEffect","fetchContacts","handleChange","event","currentTarget","value","className","css","onSubmit","preventDefault","find","contact","toLowerCase","alert","addContacts","addContact","type","pattern","title","required","onChange","id","onClick","contactId","deleteContacts","filter","selectFilter","visibleContacts","normalizedFilter","search","includes","getVisibleContacts","map","setFilter","width","color","isLoadingApp","selectIsLoading","style","height","display","justifyContent","alignItems","fontSize","state","arrayInitialContacts","isLoading","selectIsLoggedIn"],"sourceRoot":""}